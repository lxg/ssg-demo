AWSTemplateFormatVersion: "2010-09-09"

Resources:
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::AccountId}-${AWS::Region}-${AWS::StackName}"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - Date
            MaxAge: 3600
    DeletionPolicy: Delete

  cloudfrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'foobar'

  s3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref s3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              CanonicalUser: !GetAtt cloudfrontOriginIdentity.S3CanonicalUserId
            Action: 's3:GetObject'
            Resource:  !Sub "arn:aws:s3:::${s3Bucket}/*"

  cachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Ref s3Bucket
        DefaultTTL: 600
        MaxTTL: 31536000
        MinTTL: 0
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: all
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all

  cloudfrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        HttpVersion: http2and3
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ErrorCachingMinTTL: 20
            ResponsePagePath: /_errors/404/index.html
          - ErrorCode: 403
            ResponseCode: 200
            ErrorCachingMinTTL: 20
            ResponsePagePath: /_errors/404/index.html
        Origins:
          - Id: bucket
            DomainName: !GetAtt s3Bucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${cloudfrontOriginIdentity}"
        DefaultCacheBehavior:
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt rewriteToHtmlPage.FunctionMetadata.FunctionARN
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachePolicyId:
            Ref: cachePolicy
          Compress: true
          DefaultTTL: 600
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          TargetOriginId: bucket
          ViewerProtocolPolicy: redirect-to-https


  rewriteToHtmlPage:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub "${AWS::StackName}-redirectFunction"
      AutoPublish: true
      FunctionCode: |
        function handler(event) {
            var request = event.request;

            if (request.uri.indexOf("_assets") < 0) {
                if (request.uri.endsWith("/")) {
                    request.uri += "index.html";
                } else {
                    request = {
                        statusCode: 302,
                        statusDescription: 'Found',
                        headers: {
                            'location': { value: request.uri + '/' }
                        }
                    }
                }
            }

            return request;
        }
      FunctionConfig:
        Runtime: cloudfront-js-1.0
        Comment: Rewrite to actual index page in the given folder

Outputs:
  bucketName:
    Value: !Ref s3Bucket

  cftDist:
    Value: !Ref cloudfrontDistribution

  cftDomain:
    Value: !GetAtt cloudfrontDistribution.DomainName
